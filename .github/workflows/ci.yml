name: CI

on:
  push:
    branches: [ main ]

env:
  REPOSITORY: zeitonline-210413
  ENVIRONMENT: production
  PROJECT: audev-kennzahlenupdate-import

jobs:
  build_import:
    name: build import docker image & push to registry
    env: 
      IMAGE_IMPORT: audev-kennzahlenupdate-import
      DOCKERLOCATION: import
    runs-on: [ self-hosted, linux ]
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Baseproject
      uses: ZeitOnline/gh-action-baseproject@v0
      id: baseproject
      with:
        project_name: ${{ env.PROJECT }}
        environment: ${{ env.ENVIRONMENT }}
        gcr_auth: true

    - name: Install buildx
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        driver: docker

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKERLOCATION }}/Dockerfile
        push: true
        tags: ${{ secrets.GCR_IMAGE_REGISTRY }}/${{ env.IMAGE_IMPORT }}:${{ github.sha }}

  build_forecast:
    name: build forecast docker image & push to registry
    env: 
      IMAGE_FORECAST: audev-kennzahlenupdate-forecast
      DOCKERLOCATION: forecast
    runs-on: [ self-hosted, linux ]
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Baseproject
      uses: ZeitOnline/gh-action-baseproject@v0
      id: baseproject
      with:
        project_name: ${{ env.PROJECT }}
        environment: ${{ env.ENVIRONMENT }}
        gcr_auth: true

    - name: Install buildx
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        driver: docker

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKERLOCATION }}/Dockerfile
        push: true
        tags: ${{ secrets.GCR_IMAGE_REGISTRY }}/${{ env.IMAGE_FORECAST }}:${{ github.sha }}

  deploy:
    if: github.ref == 'refs/heads/main'
    name: deploy production
    runs-on: [self-hosted, linux]
    needs: [ build_import, build_forecast ]

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Set new image
      run: |
        cd k8s/
        kustomize edit set image "eu.gcr.io/$REPOSITORY/$IMAGE_IMPORT:$GITHUB_SHA"
        kustomize edit set image "eu.gcr.io/$REPOSITORY/$IMAGE_FORECAST:$GITHUB_SHA"
    - name: Commit and push
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git commit -am "Update deployment"
        git push